This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repomix on: 2024-12-12T18:41:02.366Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Repository structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repomix's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.

Additional Info:
----------------

For more information about Repomix, visit: https://github.com/yamadashy/repomix

================================================================
Repository Structure
================================================================
.snapshot-securecenter_v1.json
Migration20241211202532.ts
Migration20241212053500.ts
Migration20241212063915.ts
Migration20241212175619.ts
Migration20241212180400.ts
Migration20241212183455.ts
Migration20241212183500.ts

================================================================
Repository Files
================================================================

================
File: .snapshot-securecenter_v1.json
================
{
  "namespaces": [
    "public"
  ],
  "name": "public",
  "tables": [
    {
      "columns": {
        "id": {
          "name": "id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "email": {
          "name": "email",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "password": {
          "name": "password",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "first_name": {
          "name": "first_name",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "last_name": {
          "name": "last_name",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "default": "true",
          "mappedType": "boolean"
        },
        "last_login": {
          "name": "last_login",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 6,
          "mappedType": "datetime"
        }
      },
      "name": "client_user",
      "schema": "public",
      "indexes": [
        {
          "columnNames": [
            "email"
          ],
          "composite": false,
          "keyName": "client_user_email_unique",
          "constraint": true,
          "primary": false,
          "unique": true
        },
        {
          "keyName": "client_user_pkey",
          "columnNames": [
            "id"
          ],
          "composite": false,
          "constraint": true,
          "primary": true,
          "unique": true
        }
      ],
      "checks": [],
      "foreignKeys": {},
      "nativeEnums": {}
    },
    {
      "columns": {
        "id": {
          "name": "id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "name": {
          "name": "name",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "type": {
          "name": "type",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "enumItems": [
            "SERVICE_PROVIDER",
            "CLIENT"
          ],
          "mappedType": "enum"
        },
        "description": {
          "name": "description",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "default": "true",
          "mappedType": "boolean"
        },
        "is_service_provider": {
          "name": "is_service_provider",
          "type": "boolean",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "default": "false",
          "mappedType": "boolean"
        },
        "primary_contact": {
          "name": "primary_contact",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        },
        "email": {
          "name": "email",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        },
        "phone": {
          "name": "phone",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        },
        "address": {
          "name": "address",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        }
      },
      "name": "organization",
      "schema": "public",
      "indexes": [
        {
          "keyName": "organization_pkey",
          "columnNames": [
            "id"
          ],
          "composite": false,
          "constraint": true,
          "primary": true,
          "unique": true
        }
      ],
      "checks": [],
      "foreignKeys": {},
      "nativeEnums": {}
    },
    {
      "columns": {
        "id": {
          "name": "id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "risk": {
          "name": "risk",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "priority": {
          "name": "priority",
          "type": "int",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "mappedType": "integer"
        },
        "strategy": {
          "name": "strategy",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "mappedType": "text"
        },
        "timeline": {
          "name": "timeline",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "timeframe": {
          "name": "timeframe",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "enumItems": [
            "IMMEDIATE",
            "SHORT_TERM",
            "MEDIUM_TERM",
            "LONG_TERM"
          ],
          "mappedType": "enum"
        },
        "risk_area": {
          "name": "risk_area",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "success_criteria": {
          "name": "success_criteria",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "resources": {
          "name": "resources",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "estimated_cost": {
          "name": "estimated_cost",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "responsible_party": {
          "name": "responsible_party",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "organization_id": {
          "name": "organization_id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        }
      },
      "name": "mitigation_priority",
      "schema": "public",
      "indexes": [
        {
          "keyName": "mitigation_priority_pkey",
          "columnNames": [
            "id"
          ],
          "composite": false,
          "constraint": true,
          "primary": true,
          "unique": true
        }
      ],
      "checks": [],
      "foreignKeys": {
        "mitigation_priority_organization_id_foreign": {
          "constraintName": "mitigation_priority_organization_id_foreign",
          "columnNames": [
            "organization_id"
          ],
          "localTableName": "public.mitigation_priority",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.organization",
          "updateRule": "cascade"
        }
      },
      "nativeEnums": {}
    },
    {
      "columns": {
        "id": {
          "name": "id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "organization_id": {
          "name": "organization_id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "title": {
          "name": "title",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "description": {
          "name": "description",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "severity": {
          "name": "severity",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "enumItems": [
            "CRITICAL",
            "HIGH",
            "MEDIUM",
            "LOW"
          ],
          "mappedType": "enum"
        },
        "status": {
          "name": "status",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "default": "'OPEN'",
          "enumItems": [
            "OPEN",
            "INVESTIGATING",
            "MITIGATING",
            "RESOLVED",
            "CLOSED"
          ],
          "mappedType": "enum"
        },
        "reporter_id": {
          "name": "reporter_id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "assignee_id": {
          "name": "assignee_id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        },
        "resolution": {
          "name": "resolution",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        },
        "resolved_date": {
          "name": "resolved_date",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 6,
          "mappedType": "datetime"
        }
      },
      "name": "incident",
      "schema": "public",
      "indexes": [
        {
          "keyName": "incident_pkey",
          "columnNames": [
            "id"
          ],
          "composite": false,
          "constraint": true,
          "primary": true,
          "unique": true
        }
      ],
      "checks": [],
      "foreignKeys": {
        "incident_organization_id_foreign": {
          "constraintName": "incident_organization_id_foreign",
          "columnNames": [
            "organization_id"
          ],
          "localTableName": "public.incident",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.organization",
          "updateRule": "cascade"
        },
        "incident_reporter_id_foreign": {
          "constraintName": "incident_reporter_id_foreign",
          "columnNames": [
            "reporter_id"
          ],
          "localTableName": "public.incident",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.client_user",
          "updateRule": "cascade"
        },
        "incident_assignee_id_foreign": {
          "constraintName": "incident_assignee_id_foreign",
          "columnNames": [
            "assignee_id"
          ],
          "localTableName": "public.incident",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.client_user",
          "deleteRule": "set null",
          "updateRule": "cascade"
        }
      },
      "nativeEnums": {}
    },
    {
      "columns": {
        "id": {
          "name": "id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "organization_id": {
          "name": "organization_id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "title": {
          "name": "title",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "version": {
          "name": "version",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "status": {
          "name": "status",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "review_date": {
          "name": "review_date",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "next_review_date": {
          "name": "next_review_date",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "content": {
          "name": "content",
          "type": "jsonb",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "mappedType": "json"
        }
      },
      "name": "continuity_plan",
      "schema": "public",
      "indexes": [
        {
          "keyName": "continuity_plan_pkey",
          "columnNames": [
            "id"
          ],
          "composite": false,
          "constraint": true,
          "primary": true,
          "unique": true
        }
      ],
      "checks": [],
      "foreignKeys": {
        "continuity_plan_organization_id_foreign": {
          "constraintName": "continuity_plan_organization_id_foreign",
          "columnNames": [
            "organization_id"
          ],
          "localTableName": "public.continuity_plan",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.organization",
          "updateRule": "cascade"
        }
      },
      "nativeEnums": {}
    },
    {
      "columns": {
        "id": {
          "name": "id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "organization_id": {
          "name": "organization_id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "name": {
          "name": "name",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "description": {
          "name": "description",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        },
        "type": {
          "name": "type",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "enumItems": [
            "POLICY",
            "PROCEDURE",
            "DOCUMENTATION",
            "SCAN_RESULT",
            "CONFIGURATION",
            "TRAINING",
            "AUDIT_LOG",
            "EVIDENCE",
            "OTHER"
          ],
          "mappedType": "enum"
        },
        "status": {
          "name": "status",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "default": "'DRAFT'",
          "enumItems": [
            "DRAFT",
            "IN_REVIEW",
            "APPROVED",
            "ARCHIVED",
            "REJECTED"
          ],
          "mappedType": "enum"
        },
        "version": {
          "name": "version",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "file_url": {
          "name": "file_url",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "mime_type": {
          "name": "mime_type",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "file_size": {
          "name": "file_size",
          "type": "int",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "mappedType": "integer"
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "mappedType": "json"
        },
        "last_reviewed_at": {
          "name": "last_reviewed_at",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 6,
          "mappedType": "datetime"
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 6,
          "mappedType": "datetime"
        },
        "created_by": {
          "name": "created_by",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "last_reviewed_by": {
          "name": "last_reviewed_by",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        },
        "approved_by": {
          "name": "approved_by",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        }
      },
      "name": "artifact",
      "schema": "public",
      "indexes": [
        {
          "keyName": "artifact_pkey",
          "columnNames": [
            "id"
          ],
          "composite": false,
          "constraint": true,
          "primary": true,
          "unique": true
        }
      ],
      "checks": [],
      "foreignKeys": {
        "artifact_organization_id_foreign": {
          "constraintName": "artifact_organization_id_foreign",
          "columnNames": [
            "organization_id"
          ],
          "localTableName": "public.artifact",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.organization",
          "updateRule": "cascade"
        }
      },
      "nativeEnums": {}
    },
    {
      "columns": {
        "id": {
          "name": "id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "artifact_id": {
          "name": "artifact_id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "version": {
          "name": "version",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "file_url": {
          "name": "file_url",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "changes": {
          "name": "changes",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        },
        "created_by": {
          "name": "created_by",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        }
      },
      "name": "artifact_revision",
      "schema": "public",
      "indexes": [
        {
          "keyName": "artifact_revision_pkey",
          "columnNames": [
            "id"
          ],
          "composite": false,
          "constraint": true,
          "primary": true,
          "unique": true
        }
      ],
      "checks": [],
      "foreignKeys": {
        "artifact_revision_artifact_id_foreign": {
          "constraintName": "artifact_revision_artifact_id_foreign",
          "columnNames": [
            "artifact_id"
          ],
          "localTableName": "public.artifact_revision",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.artifact",
          "updateRule": "cascade"
        }
      },
      "nativeEnums": {}
    },
    {
      "columns": {
        "id": {
          "name": "id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "organization_id": {
          "name": "organization_id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "finding": {
          "name": "finding",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "recommendation": {
          "name": "recommendation",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "priority": {
          "name": "priority",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "status": {
          "name": "status",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "target_date": {
          "name": "target_date",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "completion_date": {
          "name": "completion_date",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 6,
          "mappedType": "datetime"
        },
        "responsible_party": {
          "name": "responsible_party",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "mitigation_plan": {
          "name": "mitigation_plan",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "residual_risk": {
          "name": "residual_risk",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        }
      },
      "name": "poam",
      "schema": "public",
      "indexes": [
        {
          "keyName": "poam_pkey",
          "columnNames": [
            "id"
          ],
          "composite": false,
          "constraint": true,
          "primary": true,
          "unique": true
        }
      ],
      "checks": [],
      "foreignKeys": {
        "poam_organization_id_foreign": {
          "constraintName": "poam_organization_id_foreign",
          "columnNames": [
            "organization_id"
          ],
          "localTableName": "public.poam",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.organization",
          "updateRule": "cascade"
        }
      },
      "nativeEnums": {}
    },
    {
      "columns": {
        "id": {
          "name": "id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "annual_loss": {
          "name": "annual_loss",
          "type": "int",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "mappedType": "integer"
        },
        "probability_of_occurrence": {
          "name": "probability_of_occurrence",
          "type": "int",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "mappedType": "integer"
        },
        "impact_score": {
          "name": "impact_score",
          "type": "int",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "mappedType": "integer"
        },
        "risk_score": {
          "name": "risk_score",
          "type": "int",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "mappedType": "integer"
        },
        "organization_id": {
          "name": "organization_id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        }
      },
      "name": "quantitative_risk",
      "schema": "public",
      "indexes": [
        {
          "keyName": "quantitative_risk_pkey",
          "columnNames": [
            "id"
          ],
          "composite": false,
          "constraint": true,
          "primary": true,
          "unique": true
        }
      ],
      "checks": [],
      "foreignKeys": {
        "quantitative_risk_organization_id_foreign": {
          "constraintName": "quantitative_risk_organization_id_foreign",
          "columnNames": [
            "organization_id"
          ],
          "localTableName": "public.quantitative_risk",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.organization",
          "updateRule": "cascade"
        }
      },
      "nativeEnums": {}
    },
    {
      "columns": {
        "id": {
          "name": "id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "impact": {
          "name": "impact",
          "type": "int",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "mappedType": "integer"
        },
        "likelihood": {
          "name": "likelihood",
          "type": "int",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "mappedType": "integer"
        },
        "value": {
          "name": "value",
          "type": "int",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "mappedType": "integer"
        },
        "organization_id": {
          "name": "organization_id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        }
      },
      "name": "risk_matrix_entry",
      "schema": "public",
      "indexes": [
        {
          "keyName": "risk_matrix_entry_pkey",
          "columnNames": [
            "id"
          ],
          "composite": false,
          "constraint": true,
          "primary": true,
          "unique": true
        }
      ],
      "checks": [],
      "foreignKeys": {
        "risk_matrix_entry_organization_id_foreign": {
          "constraintName": "risk_matrix_entry_organization_id_foreign",
          "columnNames": [
            "organization_id"
          ],
          "localTableName": "public.risk_matrix_entry",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.organization",
          "updateRule": "cascade"
        }
      },
      "nativeEnums": {}
    },
    {
      "columns": {
        "id": {
          "name": "id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "business_functions": {
          "name": "business_functions",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "mappedType": "text"
        },
        "key_assets": {
          "name": "key_assets",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "mappedType": "text"
        },
        "compliance_frameworks": {
          "name": "compliance_frameworks",
          "type": "text[]",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "mappedType": "array"
        },
        "data_types": {
          "name": "data_types",
          "type": "text[]",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "mappedType": "array"
        },
        "operational_risk": {
          "name": "operational_risk",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "enumItems": [
            "LOW",
            "MEDIUM",
            "HIGH",
            "CRITICAL"
          ],
          "mappedType": "enum"
        },
        "data_security_risk": {
          "name": "data_security_risk",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "enumItems": [
            "LOW",
            "MEDIUM",
            "HIGH",
            "CRITICAL"
          ],
          "mappedType": "enum"
        },
        "compliance_risk": {
          "name": "compliance_risk",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "enumItems": [
            "LOW",
            "MEDIUM",
            "HIGH",
            "CRITICAL"
          ],
          "mappedType": "enum"
        },
        "financial_risk": {
          "name": "financial_risk",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "enumItems": [
            "LOW",
            "MEDIUM",
            "HIGH",
            "CRITICAL"
          ],
          "mappedType": "enum"
        },
        "organization_id": {
          "name": "organization_id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        }
      },
      "name": "risk_profile",
      "schema": "public",
      "indexes": [
        {
          "columnNames": [
            "organization_id"
          ],
          "composite": false,
          "keyName": "risk_profile_organization_id_unique",
          "constraint": true,
          "primary": false,
          "unique": true
        },
        {
          "keyName": "risk_profile_pkey",
          "columnNames": [
            "id"
          ],
          "composite": false,
          "constraint": true,
          "primary": true,
          "unique": true
        }
      ],
      "checks": [],
      "foreignKeys": {
        "risk_profile_organization_id_foreign": {
          "constraintName": "risk_profile_organization_id_foreign",
          "columnNames": [
            "organization_id"
          ],
          "localTableName": "public.risk_profile",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.organization",
          "updateRule": "cascade"
        }
      },
      "nativeEnums": {}
    },
    {
      "columns": {
        "id": {
          "name": "id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "provider_id": {
          "name": "provider_id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "client_id": {
          "name": "client_id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "status": {
          "name": "status",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "start_date": {
          "name": "start_date",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "end_date": {
          "name": "end_date",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 6,
          "mappedType": "datetime"
        },
        "contract_details": {
          "name": "contract_details",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        }
      },
      "name": "service_provider_client",
      "schema": "public",
      "indexes": [
        {
          "keyName": "service_provider_client_provider_id_client_id_unique",
          "columnNames": [
            "provider_id",
            "client_id"
          ],
          "composite": true,
          "constraint": true,
          "primary": false,
          "unique": true
        },
        {
          "keyName": "service_provider_client_pkey",
          "columnNames": [
            "id"
          ],
          "composite": false,
          "constraint": true,
          "primary": true,
          "unique": true
        }
      ],
      "checks": [],
      "foreignKeys": {
        "service_provider_client_provider_id_foreign": {
          "constraintName": "service_provider_client_provider_id_foreign",
          "columnNames": [
            "provider_id"
          ],
          "localTableName": "public.service_provider_client",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.organization",
          "updateRule": "cascade"
        },
        "service_provider_client_client_id_foreign": {
          "constraintName": "service_provider_client_client_id_foreign",
          "columnNames": [
            "client_id"
          ],
          "localTableName": "public.service_provider_client",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.organization",
          "updateRule": "cascade"
        }
      },
      "nativeEnums": {}
    },
    {
      "columns": {
        "id": {
          "name": "id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "organization_id": {
          "name": "organization_id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "name": {
          "name": "name",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "description": {
          "name": "description",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        },
        "system_type": {
          "name": "system_type",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "enumItems": [
            "WEB_APPLICATION",
            "NETWORK_SYSTEM",
            "DATABASE_SYSTEM",
            "CLOUD_SERVICE",
            "LEGACY_SYSTEM",
            "OTHER"
          ],
          "mappedType": "enum"
        },
        "criticality": {
          "name": "criticality",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "enumItems": [
            "HIGH",
            "MODERATE",
            "LOW"
          ],
          "mappedType": "enum"
        },
        "status": {
          "name": "status",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "default": "'ACTIVE'",
          "enumItems": [
            "ACTIVE",
            "INACTIVE",
            "DECOMMISSIONED",
            "UNDER_DEVELOPMENT"
          ],
          "mappedType": "enum"
        },
        "owner": {
          "name": "owner",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        },
        "custodian": {
          "name": "custodian",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        },
        "boundaries": {
          "name": "boundaries",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        },
        "location": {
          "name": "location",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        }
      },
      "name": "system",
      "schema": "public",
      "indexes": [
        {
          "keyName": "system_pkey",
          "columnNames": [
            "id"
          ],
          "composite": false,
          "constraint": true,
          "primary": true,
          "unique": true
        }
      ],
      "checks": [],
      "foreignKeys": {
        "system_organization_id_foreign": {
          "constraintName": "system_organization_id_foreign",
          "columnNames": [
            "organization_id"
          ],
          "localTableName": "public.system",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.organization",
          "updateRule": "cascade"
        }
      },
      "nativeEnums": {}
    },
    {
      "columns": {
        "id": {
          "name": "id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "system_id": {
          "name": "system_id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "name": {
          "name": "name",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "description": {
          "name": "description",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        },
        "framework": {
          "name": "framework",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "status": {
          "name": "status",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "default": "'DRAFT'",
          "enumItems": [
            "DRAFT",
            "IN_PROGRESS",
            "UNDER_REVIEW",
            "APPROVED",
            "REJECTED",
            "EXPIRED"
          ],
          "mappedType": "enum"
        },
        "current_phase": {
          "name": "current_phase",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "default": "'PREPARATION'",
          "enumItems": [
            "PREPARATION",
            "INITIAL_ASSESSMENT",
            "CONTROL_IMPLEMENTATION",
            "TESTING",
            "VALIDATION",
            "FINAL_REVIEW",
            "AUTHORIZATION",
            "MONITORING"
          ],
          "mappedType": "enum"
        },
        "valid_from": {
          "name": "valid_from",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 6,
          "mappedType": "datetime"
        },
        "valid_until": {
          "name": "valid_until",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 6,
          "mappedType": "datetime"
        },
        "last_assessment": {
          "name": "last_assessment",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 6,
          "mappedType": "datetime"
        },
        "next_assessment": {
          "name": "next_assessment",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 6,
          "mappedType": "datetime"
        }
      },
      "name": "atopackage",
      "schema": "public",
      "indexes": [
        {
          "keyName": "atopackage_pkey",
          "columnNames": [
            "id"
          ],
          "composite": false,
          "constraint": true,
          "primary": true,
          "unique": true
        }
      ],
      "checks": [],
      "foreignKeys": {
        "atopackage_system_id_foreign": {
          "constraintName": "atopackage_system_id_foreign",
          "columnNames": [
            "system_id"
          ],
          "localTableName": "public.atopackage",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.system",
          "updateRule": "cascade"
        }
      },
      "nativeEnums": {}
    },
    {
      "columns": {
        "id": {
          "name": "id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "ato_package_id": {
          "name": "ato_package_id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "control_id": {
          "name": "control_id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "title": {
          "name": "title",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "description": {
          "name": "description",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        },
        "status": {
          "name": "status",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "default": "'NOT_IMPLEMENTED'",
          "enumItems": [
            "NOT_IMPLEMENTED",
            "PLANNED",
            "PARTIALLY_IMPLEMENTED",
            "IMPLEMENTED",
            "NOT_APPLICABLE"
          ],
          "mappedType": "enum"
        },
        "implementation_status": {
          "name": "implementation_status",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        },
        "test_results": {
          "name": "test_results",
          "type": "jsonb",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "mappedType": "json"
        },
        "tested_date": {
          "name": "tested_date",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 6,
          "mappedType": "datetime"
        }
      },
      "name": "control_assessment",
      "schema": "public",
      "indexes": [
        {
          "keyName": "control_assessment_pkey",
          "columnNames": [
            "id"
          ],
          "composite": false,
          "constraint": true,
          "primary": true,
          "unique": true
        }
      ],
      "checks": [],
      "foreignKeys": {
        "control_assessment_ato_package_id_foreign": {
          "constraintName": "control_assessment_ato_package_id_foreign",
          "columnNames": [
            "ato_package_id"
          ],
          "localTableName": "public.control_assessment",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.atopackage",
          "updateRule": "cascade"
        }
      },
      "nativeEnums": {}
    },
    {
      "columns": {
        "id": {
          "name": "id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "control_id": {
          "name": "control_id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "type": {
          "name": "type",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "enumItems": [
            "SSP",
            "RAR",
            "SAR",
            "SAP",
            "POA_M",
            "EVIDENCE",
            "POLICY",
            "PROCEDURE",
            "CONFIGURATION",
            "TEST_RESULT",
            "OTHER"
          ],
          "mappedType": "enum"
        },
        "title": {
          "name": "title",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "description": {
          "name": "description",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        },
        "version": {
          "name": "version",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "file_url": {
          "name": "file_url",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "mime_type": {
          "name": "mime_type",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        },
        "file_size": {
          "name": "file_size",
          "type": "int",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "mappedType": "integer"
        },
        "status": {
          "name": "status",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "default": "'PENDING'",
          "enumItems": [
            "PENDING",
            "APPROVED",
            "REJECTED",
            "NEEDS_WORK"
          ],
          "mappedType": "enum"
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "mappedType": "json"
        }
      },
      "name": "document",
      "schema": "public",
      "indexes": [
        {
          "keyName": "document_pkey",
          "columnNames": [
            "id"
          ],
          "composite": false,
          "constraint": true,
          "primary": true,
          "unique": true
        }
      ],
      "checks": [],
      "foreignKeys": {
        "document_control_id_foreign": {
          "constraintName": "document_control_id_foreign",
          "columnNames": [
            "control_id"
          ],
          "localTableName": "public.document",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.control_assessment",
          "updateRule": "cascade"
        }
      },
      "nativeEnums": {}
    },
    {
      "columns": {
        "id": {
          "name": "id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "control_id": {
          "name": "control_id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "artifact_id": {
          "name": "artifact_id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "association": {
          "name": "association",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "notes": {
          "name": "notes",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        }
      },
      "name": "control_artifact",
      "schema": "public",
      "indexes": [
        {
          "keyName": "control_artifact_control_id_artifact_id_unique",
          "columnNames": [
            "control_id",
            "artifact_id"
          ],
          "composite": true,
          "constraint": true,
          "primary": false,
          "unique": true
        },
        {
          "keyName": "control_artifact_pkey",
          "columnNames": [
            "id"
          ],
          "composite": false,
          "constraint": true,
          "primary": true,
          "unique": true
        }
      ],
      "checks": [],
      "foreignKeys": {
        "control_artifact_control_id_foreign": {
          "constraintName": "control_artifact_control_id_foreign",
          "columnNames": [
            "control_id"
          ],
          "localTableName": "public.control_artifact",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.control_assessment",
          "updateRule": "cascade"
        },
        "control_artifact_artifact_id_foreign": {
          "constraintName": "control_artifact_artifact_id_foreign",
          "columnNames": [
            "artifact_id"
          ],
          "localTableName": "public.control_artifact",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.artifact",
          "updateRule": "cascade"
        }
      },
      "nativeEnums": {}
    },
    {
      "columns": {
        "id": {
          "name": "id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "entity_type": {
          "name": "entity_type",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "entity_id": {
          "name": "entity_id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "approver_id": {
          "name": "approver_id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "status": {
          "name": "status",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "default": "'PENDING'",
          "enumItems": [
            "PENDING",
            "APPROVED",
            "REJECTED",
            "NEEDS_WORK"
          ],
          "mappedType": "enum"
        },
        "comments": {
          "name": "comments",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        },
        "approved_at": {
          "name": "approved_at",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 6,
          "mappedType": "datetime"
        },
        "document_id": {
          "name": "document_id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        },
        "control_assessment_id": {
          "name": "control_assessment_id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        },
        "ato_package_id": {
          "name": "ato_package_id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        },
        "continuity_plan_id": {
          "name": "continuity_plan_id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        },
        "poam_id": {
          "name": "poam_id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        }
      },
      "name": "approval",
      "schema": "public",
      "indexes": [
        {
          "keyName": "approval_pkey",
          "columnNames": [
            "id"
          ],
          "composite": false,
          "constraint": true,
          "primary": true,
          "unique": true
        }
      ],
      "checks": [],
      "foreignKeys": {
        "approval_approver_id_foreign": {
          "constraintName": "approval_approver_id_foreign",
          "columnNames": [
            "approver_id"
          ],
          "localTableName": "public.approval",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.client_user",
          "updateRule": "cascade"
        },
        "approval_document_id_foreign": {
          "constraintName": "approval_document_id_foreign",
          "columnNames": [
            "document_id"
          ],
          "localTableName": "public.approval",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.document",
          "deleteRule": "set null",
          "updateRule": "cascade"
        },
        "approval_control_assessment_id_foreign": {
          "constraintName": "approval_control_assessment_id_foreign",
          "columnNames": [
            "control_assessment_id"
          ],
          "localTableName": "public.approval",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.control_assessment",
          "deleteRule": "set null",
          "updateRule": "cascade"
        },
        "approval_ato_package_id_foreign": {
          "constraintName": "approval_ato_package_id_foreign",
          "columnNames": [
            "ato_package_id"
          ],
          "localTableName": "public.approval",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.atopackage",
          "deleteRule": "set null",
          "updateRule": "cascade"
        },
        "approval_continuity_plan_id_foreign": {
          "constraintName": "approval_continuity_plan_id_foreign",
          "columnNames": [
            "continuity_plan_id"
          ],
          "localTableName": "public.approval",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.continuity_plan",
          "deleteRule": "set null",
          "updateRule": "cascade"
        },
        "approval_poam_id_foreign": {
          "constraintName": "approval_poam_id_foreign",
          "columnNames": [
            "poam_id"
          ],
          "localTableName": "public.approval",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.poam",
          "deleteRule": "set null",
          "updateRule": "cascade"
        }
      },
      "nativeEnums": {}
    },
    {
      "columns": {
        "id": {
          "name": "id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "system_id": {
          "name": "system_id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "name": {
          "name": "name",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "type": {
          "name": "type",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "status": {
          "name": "status",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "created_by_id": {
          "name": "created_by_id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "description": {
          "name": "description",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        },
        "version": {
          "name": "version",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        },
        "location": {
          "name": "location",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        },
        "purchase_date": {
          "name": "purchase_date",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 6,
          "mappedType": "datetime"
        },
        "end_of_life": {
          "name": "end_of_life",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 6,
          "mappedType": "datetime"
        }
      },
      "name": "asset",
      "schema": "public",
      "indexes": [
        {
          "keyName": "asset_pkey",
          "columnNames": [
            "id"
          ],
          "composite": false,
          "constraint": true,
          "primary": true,
          "unique": true
        }
      ],
      "checks": [],
      "foreignKeys": {
        "asset_system_id_foreign": {
          "constraintName": "asset_system_id_foreign",
          "columnNames": [
            "system_id"
          ],
          "localTableName": "public.asset",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.system",
          "updateRule": "cascade"
        },
        "asset_created_by_id_foreign": {
          "constraintName": "asset_created_by_id_foreign",
          "columnNames": [
            "created_by_id"
          ],
          "localTableName": "public.asset",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.client_user",
          "updateRule": "cascade"
        }
      },
      "nativeEnums": {}
    },
    {
      "columns": {
        "id": {
          "name": "id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "asset_id": {
          "name": "asset_id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "port": {
          "name": "port",
          "type": "int",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "mappedType": "integer"
        },
        "protocol": {
          "name": "protocol",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "service": {
          "name": "service",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "description": {
          "name": "description",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        },
        "status": {
          "name": "status",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "last_scan": {
          "name": "last_scan",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 6,
          "mappedType": "datetime"
        }
      },
      "name": "port_mapping",
      "schema": "public",
      "indexes": [
        {
          "keyName": "port_mapping_pkey",
          "columnNames": [
            "id"
          ],
          "composite": false,
          "constraint": true,
          "primary": true,
          "unique": true
        }
      ],
      "checks": [],
      "foreignKeys": {
        "port_mapping_asset_id_foreign": {
          "constraintName": "port_mapping_asset_id_foreign",
          "columnNames": [
            "asset_id"
          ],
          "localTableName": "public.port_mapping",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.asset",
          "updateRule": "cascade"
        }
      },
      "nativeEnums": {}
    },
    {
      "columns": {
        "incident_id": {
          "name": "incident_id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "asset_id": {
          "name": "asset_id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        }
      },
      "name": "incident_affected_assets",
      "schema": "public",
      "indexes": [
        {
          "keyName": "incident_affected_assets_pkey",
          "columnNames": [
            "incident_id",
            "asset_id"
          ],
          "composite": true,
          "constraint": true,
          "primary": true,
          "unique": true
        }
      ],
      "checks": [],
      "foreignKeys": {
        "incident_affected_assets_incident_id_foreign": {
          "constraintName": "incident_affected_assets_incident_id_foreign",
          "columnNames": [
            "incident_id"
          ],
          "localTableName": "public.incident_affected_assets",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.incident",
          "deleteRule": "cascade",
          "updateRule": "cascade"
        },
        "incident_affected_assets_asset_id_foreign": {
          "constraintName": "incident_affected_assets_asset_id_foreign",
          "columnNames": [
            "asset_id"
          ],
          "localTableName": "public.incident_affected_assets",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.asset",
          "deleteRule": "cascade",
          "updateRule": "cascade"
        }
      },
      "nativeEnums": {}
    },
    {
      "columns": {
        "id": {
          "name": "id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "email": {
          "name": "email",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "password": {
          "name": "password",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "first_name": {
          "name": "first_name",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "last_name": {
          "name": "last_name",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "role": {
          "name": "role",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "default": "'ADMIN'",
          "enumItems": [
            "GLOBAL_ADMIN",
            "ADMIN",
            "USER"
          ],
          "mappedType": "enum"
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "default": "true",
          "mappedType": "boolean"
        },
        "last_login": {
          "name": "last_login",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 6,
          "mappedType": "datetime"
        }
      },
      "name": "system_user",
      "schema": "public",
      "indexes": [
        {
          "columnNames": [
            "email"
          ],
          "composite": false,
          "keyName": "system_user_email_unique",
          "constraint": true,
          "primary": false,
          "unique": true
        },
        {
          "keyName": "system_user_pkey",
          "columnNames": [
            "id"
          ],
          "composite": false,
          "constraint": true,
          "primary": true,
          "unique": true
        }
      ],
      "checks": [],
      "foreignKeys": {},
      "nativeEnums": {}
    },
    {
      "columns": {
        "id": {
          "name": "id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "organization_id": {
          "name": "organization_id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "system_user_id": {
          "name": "system_user_id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        },
        "client_user_id": {
          "name": "client_user_id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        },
        "action": {
          "name": "action",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "entity_type": {
          "name": "entity_type",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "entity_id": {
          "name": "entity_id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "details": {
          "name": "details",
          "type": "jsonb",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "mappedType": "json"
        },
        "ip_address": {
          "name": "ip_address",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        },
        "user_agent": {
          "name": "user_agent",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        }
      },
      "name": "audit_log",
      "schema": "public",
      "indexes": [
        {
          "keyName": "audit_log_pkey",
          "columnNames": [
            "id"
          ],
          "composite": false,
          "constraint": true,
          "primary": true,
          "unique": true
        }
      ],
      "checks": [],
      "foreignKeys": {
        "audit_log_organization_id_foreign": {
          "constraintName": "audit_log_organization_id_foreign",
          "columnNames": [
            "organization_id"
          ],
          "localTableName": "public.audit_log",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.organization",
          "updateRule": "cascade"
        },
        "audit_log_system_user_id_foreign": {
          "constraintName": "audit_log_system_user_id_foreign",
          "columnNames": [
            "system_user_id"
          ],
          "localTableName": "public.audit_log",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.system_user",
          "deleteRule": "set null",
          "updateRule": "cascade"
        },
        "audit_log_client_user_id_foreign": {
          "constraintName": "audit_log_client_user_id_foreign",
          "columnNames": [
            "client_user_id"
          ],
          "localTableName": "public.audit_log",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.client_user",
          "deleteRule": "set null",
          "updateRule": "cascade"
        }
      },
      "nativeEnums": {}
    },
    {
      "columns": {
        "id": {
          "name": "id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "organization_id": {
          "name": "organization_id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "system_user_id": {
          "name": "system_user_id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        },
        "client_user_id": {
          "name": "client_user_id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "default": "true",
          "mappedType": "boolean"
        }
      },
      "name": "user_organization",
      "schema": "public",
      "indexes": [
        {
          "keyName": "user_organization_pkey",
          "columnNames": [
            "id"
          ],
          "composite": false,
          "constraint": true,
          "primary": true,
          "unique": true
        }
      ],
      "checks": [],
      "foreignKeys": {
        "user_organization_organization_id_foreign": {
          "constraintName": "user_organization_organization_id_foreign",
          "columnNames": [
            "organization_id"
          ],
          "localTableName": "public.user_organization",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.organization",
          "updateRule": "cascade"
        },
        "user_organization_system_user_id_foreign": {
          "constraintName": "user_organization_system_user_id_foreign",
          "columnNames": [
            "system_user_id"
          ],
          "localTableName": "public.user_organization",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.system_user",
          "deleteRule": "set null",
          "updateRule": "cascade"
        },
        "user_organization_client_user_id_foreign": {
          "constraintName": "user_organization_client_user_id_foreign",
          "columnNames": [
            "client_user_id"
          ],
          "localTableName": "public.user_organization",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.client_user",
          "deleteRule": "set null",
          "updateRule": "cascade"
        }
      },
      "nativeEnums": {}
    }
  ],
  "nativeEnums": {}
}

================
File: Migration20241211202532.ts
================
import { Migration } from '@mikro-orm/migrations';

export class Migration20241211202532 extends Migration {

  override async up(): Promise<void> {
    this.addSql(`create table "organization" ("id" varchar(255) not null, "created_at" timestamptz not null, "updated_at" timestamptz not null, "name" varchar(255) not null, "type" text check ("type" in ('SERVICE_PROVIDER', 'CLIENT')) not null, "description" varchar(255) null, "is_active" boolean not null default true, "is_service_provider" boolean not null default false, "primary_contact" varchar(255) null, "email" varchar(255) null, "phone" varchar(255) null, "address" varchar(255) null, constraint "organization_pkey" primary key ("id"));`);

    this.addSql(`create table "continuity_plan" ("id" varchar(255) not null, "created_at" timestamptz not null, "updated_at" timestamptz not null, "organization_id" varchar(255) not null, "title" varchar(255) not null, "version" varchar(255) not null, "status" varchar(255) not null, "review_date" timestamptz not null, "next_review_date" timestamptz not null, "content" jsonb not null, constraint "continuity_plan_pkey" primary key ("id"));`);

    this.addSql(`create table "artifact" ("id" varchar(255) not null, "created_at" timestamptz not null, "updated_at" timestamptz not null, "organization_id" varchar(255) not null, "name" varchar(255) not null, "description" varchar(255) null, "type" text check ("type" in ('POLICY', 'PROCEDURE', 'DOCUMENTATION', 'SCAN_RESULT', 'CONFIGURATION', 'TRAINING', 'AUDIT_LOG', 'EVIDENCE', 'OTHER')) not null, "status" text check ("status" in ('DRAFT', 'IN_REVIEW', 'APPROVED', 'ARCHIVED', 'REJECTED')) not null default 'DRAFT', "version" varchar(255) not null, "file_url" varchar(255) not null, "mime_type" varchar(255) not null, "file_size" int not null, "metadata" jsonb null, "last_reviewed_at" timestamptz null, "expires_at" timestamptz null, "created_by" varchar(255) not null, "last_reviewed_by" varchar(255) null, "approved_by" varchar(255) null, constraint "artifact_pkey" primary key ("id"));`);

    this.addSql(`create table "artifact_revision" ("id" varchar(255) not null, "created_at" timestamptz not null, "updated_at" timestamptz not null, "artifact_id" varchar(255) not null, "version" varchar(255) not null, "file_url" varchar(255) not null, "changes" varchar(255) null, "created_by" varchar(255) not null, constraint "artifact_revision_pkey" primary key ("id"));`);

    this.addSql(`create table "poam" ("id" varchar(255) not null, "created_at" timestamptz not null, "updated_at" timestamptz not null, "organization_id" varchar(255) not null, "finding" varchar(255) not null, "recommendation" varchar(255) not null, "priority" varchar(255) not null, "status" varchar(255) not null, "target_date" timestamptz not null, "completion_date" timestamptz null, "responsible_party" varchar(255) not null, "mitigation_plan" varchar(255) not null, "residual_risk" varchar(255) null, constraint "poam_pkey" primary key ("id"));`);

    this.addSql(`create table "service_provider_client" ("id" varchar(255) not null, "created_at" timestamptz not null, "updated_at" timestamptz not null, "provider_id" varchar(255) not null, "client_id" varchar(255) not null, "status" varchar(255) not null, "start_date" timestamptz not null, "end_date" timestamptz null, "contract_details" varchar(255) null, constraint "service_provider_client_pkey" primary key ("id"));`);
    this.addSql(`alter table "service_provider_client" add constraint "service_provider_client_provider_id_client_id_unique" unique ("provider_id", "client_id");`);

    this.addSql(`create table "system" ("id" varchar(255) not null, "created_at" timestamptz not null, "updated_at" timestamptz not null, "organization_id" varchar(255) not null, "name" varchar(255) not null, "description" varchar(255) null, "system_type" text check ("system_type" in ('WEB_APPLICATION', 'NETWORK_SYSTEM', 'DATABASE_SYSTEM', 'CLOUD_SERVICE', 'LEGACY_SYSTEM', 'OTHER')) not null, "criticality" text check ("criticality" in ('HIGH', 'MODERATE', 'LOW')) not null, "status" text check ("status" in ('ACTIVE', 'INACTIVE', 'DECOMMISSIONED', 'UNDER_DEVELOPMENT')) not null default 'ACTIVE', "owner" varchar(255) null, "custodian" varchar(255) null, "boundaries" varchar(255) null, "location" varchar(255) null, constraint "system_pkey" primary key ("id"));`);

    this.addSql(`create table "atopackage" ("id" varchar(255) not null, "created_at" timestamptz not null, "updated_at" timestamptz not null, "system_id" varchar(255) not null, "name" varchar(255) not null, "description" varchar(255) null, "framework" varchar(255) not null, "status" text check ("status" in ('DRAFT', 'IN_PROGRESS', 'UNDER_REVIEW', 'APPROVED', 'REJECTED', 'EXPIRED')) not null default 'DRAFT', "current_phase" text check ("current_phase" in ('PREPARATION', 'INITIAL_ASSESSMENT', 'CONTROL_IMPLEMENTATION', 'TESTING', 'VALIDATION', 'FINAL_REVIEW', 'AUTHORIZATION', 'MONITORING')) not null default 'PREPARATION', "valid_from" timestamptz null, "valid_until" timestamptz null, "last_assessment" timestamptz null, "next_assessment" timestamptz null, constraint "atopackage_pkey" primary key ("id"));`);

    this.addSql(`create table "control_assessment" ("id" varchar(255) not null, "created_at" timestamptz not null, "updated_at" timestamptz not null, "ato_package_id" varchar(255) not null, "control_id" varchar(255) not null, "title" varchar(255) not null, "description" varchar(255) null, "status" text check ("status" in ('NOT_IMPLEMENTED', 'PLANNED', 'PARTIALLY_IMPLEMENTED', 'IMPLEMENTED', 'NOT_APPLICABLE')) not null default 'NOT_IMPLEMENTED', "implementation_status" varchar(255) null, "test_results" jsonb null, "tested_date" timestamptz null, constraint "control_assessment_pkey" primary key ("id"));`);

    this.addSql(`create table "document" ("id" varchar(255) not null, "created_at" timestamptz not null, "updated_at" timestamptz not null, "control_id" varchar(255) not null, "type" text check ("type" in ('SSP', 'RAR', 'SAR', 'SAP', 'POA_M', 'EVIDENCE', 'POLICY', 'PROCEDURE', 'CONFIGURATION', 'TEST_RESULT', 'OTHER')) not null, "title" varchar(255) not null, "description" varchar(255) null, "version" varchar(255) not null, "file_url" varchar(255) not null, "mime_type" varchar(255) null, "file_size" int null, "status" text check ("status" in ('PENDING', 'APPROVED', 'REJECTED', 'NEEDS_WORK')) not null default 'PENDING', "metadata" jsonb null, constraint "document_pkey" primary key ("id"));`);

    this.addSql(`create table "control_artifact" ("id" varchar(255) not null, "created_at" timestamptz not null, "updated_at" timestamptz not null, "control_id" varchar(255) not null, "artifact_id" varchar(255) not null, "association" varchar(255) not null, "notes" varchar(255) null, constraint "control_artifact_pkey" primary key ("id"));`);
    this.addSql(`alter table "control_artifact" add constraint "control_artifact_control_id_artifact_id_unique" unique ("control_id", "artifact_id");`);

    this.addSql(`create table "user" ("id" varchar(255) not null, "created_at" timestamptz not null, "updated_at" timestamptz not null, "email" varchar(255) not null, "password" varchar(255) not null, "name" varchar(255) not null, "system_role" text check ("system_role" in ('GLOBAL_ADMIN', 'ADMIN', 'USER')) not null default 'USER', "is_active" boolean not null default true, "last_login" timestamptz null, constraint "user_pkey" primary key ("id"));`);
    this.addSql(`alter table "user" add constraint "user_email_unique" unique ("email");`);

    this.addSql(`create table "incident" ("id" varchar(255) not null, "created_at" timestamptz not null, "updated_at" timestamptz not null, "organization_id" varchar(255) not null, "title" varchar(255) not null, "description" varchar(255) not null, "severity" text check ("severity" in ('CRITICAL', 'HIGH', 'MEDIUM', 'LOW')) not null, "status" text check ("status" in ('OPEN', 'INVESTIGATING', 'MITIGATING', 'RESOLVED', 'CLOSED')) not null default 'OPEN', "reporter_id" varchar(255) not null, "assignee_id" varchar(255) null, "resolution" varchar(255) null, "resolved_date" timestamptz null, constraint "incident_pkey" primary key ("id"));`);

    this.addSql(`create table "audit_log" ("id" varchar(255) not null, "created_at" timestamptz not null, "updated_at" timestamptz not null, "organization_id" varchar(255) not null, "user_id" varchar(255) not null, "action" varchar(255) not null, "entity_type" varchar(255) not null, "entity_id" varchar(255) not null, "details" jsonb not null, "ip_address" varchar(255) null, "user_agent" varchar(255) null, constraint "audit_log_pkey" primary key ("id"));`);

    this.addSql(`create table "asset" ("id" varchar(255) not null, "created_at" timestamptz not null, "updated_at" timestamptz not null, "system_id" varchar(255) not null, "name" varchar(255) not null, "type" varchar(255) not null, "status" varchar(255) not null, "created_by_id" varchar(255) not null, "description" varchar(255) null, "version" varchar(255) null, "location" varchar(255) null, "purchase_date" timestamptz null, "end_of_life" timestamptz null, constraint "asset_pkey" primary key ("id"));`);

    this.addSql(`create table "port_mapping" ("id" varchar(255) not null, "created_at" timestamptz not null, "updated_at" timestamptz not null, "asset_id" varchar(255) not null, "port" int not null, "protocol" varchar(255) not null, "service" varchar(255) not null, "description" varchar(255) null, "status" varchar(255) not null, "last_scan" timestamptz null, constraint "port_mapping_pkey" primary key ("id"));`);

    this.addSql(`create table "incident_affected_assets" ("incident_id" varchar(255) not null, "asset_id" varchar(255) not null, constraint "incident_affected_assets_pkey" primary key ("incident_id", "asset_id"));`);

    this.addSql(`create table "approval" ("id" varchar(255) not null, "created_at" timestamptz not null, "updated_at" timestamptz not null, "entity_type" varchar(255) not null, "entity_id" varchar(255) not null, "approver_id" varchar(255) not null, "status" text check ("status" in ('PENDING', 'APPROVED', 'REJECTED', 'NEEDS_WORK')) not null default 'PENDING', "comments" varchar(255) null, "approved_at" timestamptz null, "document_id" varchar(255) null, "control_assessment_id" varchar(255) null, "ato_package_id" varchar(255) null, "continuity_plan_id" varchar(255) null, "poam_id" varchar(255) null, constraint "approval_pkey" primary key ("id"));`);

    this.addSql(`create table "user_organization" ("id" varchar(255) not null, "created_at" timestamptz not null, "updated_at" timestamptz not null, "user_id" varchar(255) not null, "organization_id" varchar(255) not null, "org_role" text check ("org_role" in ('AODR', 'SCA', 'SCAR', 'AUDITOR', 'ISSM', 'ISSO')) not null, "is_active" boolean not null default true, constraint "user_organization_pkey" primary key ("id"));`);
    this.addSql(`alter table "user_organization" add constraint "user_organization_user_id_organization_id_unique" unique ("user_id", "organization_id");`);

    this.addSql(`alter table "continuity_plan" add constraint "continuity_plan_organization_id_foreign" foreign key ("organization_id") references "organization" ("id") on update cascade;`);

    this.addSql(`alter table "artifact" add constraint "artifact_organization_id_foreign" foreign key ("organization_id") references "organization" ("id") on update cascade;`);

    this.addSql(`alter table "artifact_revision" add constraint "artifact_revision_artifact_id_foreign" foreign key ("artifact_id") references "artifact" ("id") on update cascade;`);

    this.addSql(`alter table "poam" add constraint "poam_organization_id_foreign" foreign key ("organization_id") references "organization" ("id") on update cascade;`);

    this.addSql(`alter table "service_provider_client" add constraint "service_provider_client_provider_id_foreign" foreign key ("provider_id") references "organization" ("id") on update cascade;`);
    this.addSql(`alter table "service_provider_client" add constraint "service_provider_client_client_id_foreign" foreign key ("client_id") references "organization" ("id") on update cascade;`);

    this.addSql(`alter table "system" add constraint "system_organization_id_foreign" foreign key ("organization_id") references "organization" ("id") on update cascade;`);

    this.addSql(`alter table "atopackage" add constraint "atopackage_system_id_foreign" foreign key ("system_id") references "system" ("id") on update cascade;`);

    this.addSql(`alter table "control_assessment" add constraint "control_assessment_ato_package_id_foreign" foreign key ("ato_package_id") references "atopackage" ("id") on update cascade;`);

    this.addSql(`alter table "document" add constraint "document_control_id_foreign" foreign key ("control_id") references "control_assessment" ("id") on update cascade;`);

    this.addSql(`alter table "control_artifact" add constraint "control_artifact_control_id_foreign" foreign key ("control_id") references "control_assessment" ("id") on update cascade;`);
    this.addSql(`alter table "control_artifact" add constraint "control_artifact_artifact_id_foreign" foreign key ("artifact_id") references "artifact" ("id") on update cascade;`);

    this.addSql(`alter table "incident" add constraint "incident_organization_id_foreign" foreign key ("organization_id") references "organization" ("id") on update cascade;`);
    this.addSql(`alter table "incident" add constraint "incident_reporter_id_foreign" foreign key ("reporter_id") references "user" ("id") on update cascade;`);
    this.addSql(`alter table "incident" add constraint "incident_assignee_id_foreign" foreign key ("assignee_id") references "user" ("id") on update cascade on delete set null;`);

    this.addSql(`alter table "audit_log" add constraint "audit_log_organization_id_foreign" foreign key ("organization_id") references "organization" ("id") on update cascade;`);
    this.addSql(`alter table "audit_log" add constraint "audit_log_user_id_foreign" foreign key ("user_id") references "user" ("id") on update cascade;`);

    this.addSql(`alter table "asset" add constraint "asset_system_id_foreign" foreign key ("system_id") references "system" ("id") on update cascade;`);
    this.addSql(`alter table "asset" add constraint "asset_created_by_id_foreign" foreign key ("created_by_id") references "user" ("id") on update cascade;`);

    this.addSql(`alter table "port_mapping" add constraint "port_mapping_asset_id_foreign" foreign key ("asset_id") references "asset" ("id") on update cascade;`);

    this.addSql(`alter table "incident_affected_assets" add constraint "incident_affected_assets_incident_id_foreign" foreign key ("incident_id") references "incident" ("id") on update cascade on delete cascade;`);
    this.addSql(`alter table "incident_affected_assets" add constraint "incident_affected_assets_asset_id_foreign" foreign key ("asset_id") references "asset" ("id") on update cascade on delete cascade;`);

    this.addSql(`alter table "approval" add constraint "approval_approver_id_foreign" foreign key ("approver_id") references "user" ("id") on update cascade;`);
    this.addSql(`alter table "approval" add constraint "approval_document_id_foreign" foreign key ("document_id") references "document" ("id") on update cascade on delete set null;`);
    this.addSql(`alter table "approval" add constraint "approval_control_assessment_id_foreign" foreign key ("control_assessment_id") references "control_assessment" ("id") on update cascade on delete set null;`);
    this.addSql(`alter table "approval" add constraint "approval_ato_package_id_foreign" foreign key ("ato_package_id") references "atopackage" ("id") on update cascade on delete set null;`);
    this.addSql(`alter table "approval" add constraint "approval_continuity_plan_id_foreign" foreign key ("continuity_plan_id") references "continuity_plan" ("id") on update cascade on delete set null;`);
    this.addSql(`alter table "approval" add constraint "approval_poam_id_foreign" foreign key ("poam_id") references "poam" ("id") on update cascade on delete set null;`);

    this.addSql(`alter table "user_organization" add constraint "user_organization_user_id_foreign" foreign key ("user_id") references "user" ("id") on update cascade;`);
    this.addSql(`alter table "user_organization" add constraint "user_organization_organization_id_foreign" foreign key ("organization_id") references "organization" ("id") on update cascade;`);
  }

}

================
File: Migration20241212053500.ts
================
import { Migration } from '@mikro-orm/migrations';

export class Migration20241212053500 extends Migration {

  override async up(): Promise<void> {
    this.addSql(`create table "risk_profile" (
      "id" varchar(255) not null, 
      "created_at" timestamptz not null, 
      "updated_at" timestamptz not null, 
      "business_functions" varchar(255) not null,
      "key_assets" varchar(255) not null,
      "compliance_frameworks" text[] not null,
      "data_types" text[] not null,
      "operational_risk" text check ("operational_risk" in ('LOW', 'MEDIUM', 'HIGH', 'CRITICAL')) not null,
      "data_security_risk" text check ("data_security_risk" in ('LOW', 'MEDIUM', 'HIGH', 'CRITICAL')) not null,
      "compliance_risk" text check ("compliance_risk" in ('LOW', 'MEDIUM', 'HIGH', 'CRITICAL')) not null,
      "financial_risk" text check ("financial_risk" in ('LOW', 'MEDIUM', 'HIGH', 'CRITICAL')) not null,
      "organization_id" varchar(255) not null,
      constraint "risk_profile_pkey" primary key ("id")
    );`);

    this.addSql(`create table "quantitative_risk" (
      "id" varchar(255) not null,
      "created_at" timestamptz not null,
      "updated_at" timestamptz not null,
      "annual_loss" int not null,
      "probability_of_occurrence" float not null,
      "impact_score" float not null,
      "risk_score" float not null,
      "organization_id" varchar(255) not null,
      constraint "quantitative_risk_pkey" primary key ("id")
    );`);

    this.addSql(`create table "risk_matrix_entry" (
      "id" varchar(255) not null,
      "created_at" timestamptz not null,
      "updated_at" timestamptz not null,
      "impact" int not null,
      "likelihood" int not null,
      "value" int not null,
      "organization_id" varchar(255) not null,
      constraint "risk_matrix_entry_pkey" primary key ("id")
    );`);

    this.addSql(`create table "mitigation_priority" (
      "id" varchar(255) not null,
      "created_at" timestamptz not null,
      "updated_at" timestamptz not null,
      "risk" varchar(255) not null,
      "priority" int not null,
      "strategy" varchar(255) not null,
      "timeline" varchar(255) not null,
      "timeframe" text check ("timeframe" in ('IMMEDIATE', 'SHORT_TERM', 'MEDIUM_TERM', 'LONG_TERM')) not null,
      "risk_area" varchar(255) not null,
      "success_criteria" varchar(255) not null,
      "resources" varchar(255) not null,
      "estimated_cost" varchar(255) not null,
      "responsible_party" varchar(255) not null,
      "organization_id" varchar(255) not null,
      constraint "mitigation_priority_pkey" primary key ("id")
    );`);

    this.addSql(`alter table "risk_profile" add constraint "risk_profile_organization_id_foreign" foreign key ("organization_id") references "organization" ("id") on update cascade;`);
    this.addSql(`alter table "quantitative_risk" add constraint "quantitative_risk_organization_id_foreign" foreign key ("organization_id") references "organization" ("id") on update cascade;`);
    this.addSql(`alter table "risk_matrix_entry" add constraint "risk_matrix_entry_organization_id_foreign" foreign key ("organization_id") references "organization" ("id") on update cascade;`);
    this.addSql(`alter table "mitigation_priority" add constraint "mitigation_priority_organization_id_foreign" foreign key ("organization_id") references "organization" ("id") on update cascade;`);
  }

}

================
File: Migration20241212063915.ts
================
import { Migration } from '@mikro-orm/migrations';

export class Migration20241212063915 extends Migration {

  override async up(): Promise<void> {
    // Drop existing foreign key constraints
    this.addSql(`alter table "user_organization" drop constraint if exists "user_organization_organization_id_foreign";`);
    this.addSql(`alter table "service_provider_client" drop constraint if exists "service_provider_client_provider_id_foreign";`);
    this.addSql(`alter table "service_provider_client" drop constraint if exists "service_provider_client_client_id_foreign";`);
    this.addSql(`alter table "system" drop constraint if exists "system_organization_id_foreign";`);
    this.addSql(`alter table "incident" drop constraint if exists "incident_organization_id_foreign";`);
    this.addSql(`alter table "continuity_plan" drop constraint if exists "continuity_plan_organization_id_foreign";`);
    this.addSql(`alter table "poam" drop constraint if exists "poam_organization_id_foreign";`);
    this.addSql(`alter table "audit_log" drop constraint if exists "audit_log_organization_id_foreign";`);
    this.addSql(`alter table "artifact" drop constraint if exists "artifact_organization_id_foreign";`);
    this.addSql(`alter table "mitigation_priority" drop constraint if exists "mitigation_priority_organization_id_foreign";`);
    this.addSql(`alter table "quantitative_risk" drop constraint if exists "quantitative_risk_organization_id_foreign";`);
    this.addSql(`alter table "risk_matrix_entry" drop constraint if exists "risk_matrix_entry_organization_id_foreign";`);
    this.addSql(`alter table "risk_profile" drop constraint if exists "risk_profile_organization_id_foreign";`);

    // Add constraints back with ON DELETE CASCADE
    this.addSql(`alter table "user_organization" add constraint "user_organization_organization_id_foreign" foreign key ("organization_id") references "organization" ("id") on update cascade on delete cascade;`);
    this.addSql(`alter table "service_provider_client" add constraint "service_provider_client_provider_id_foreign" foreign key ("provider_id") references "organization" ("id") on update cascade on delete cascade;`);
    this.addSql(`alter table "service_provider_client" add constraint "service_provider_client_client_id_foreign" foreign key ("client_id") references "organization" ("id") on update cascade on delete cascade;`);
    this.addSql(`alter table "system" add constraint "system_organization_id_foreign" foreign key ("organization_id") references "organization" ("id") on update cascade on delete cascade;`);
    this.addSql(`alter table "incident" add constraint "incident_organization_id_foreign" foreign key ("organization_id") references "organization" ("id") on update cascade on delete cascade;`);
    this.addSql(`alter table "continuity_plan" add constraint "continuity_plan_organization_id_foreign" foreign key ("organization_id") references "organization" ("id") on update cascade on delete cascade;`);
    this.addSql(`alter table "poam" add constraint "poam_organization_id_foreign" foreign key ("organization_id") references "organization" ("id") on update cascade on delete cascade;`);
    this.addSql(`alter table "audit_log" add constraint "audit_log_organization_id_foreign" foreign key ("organization_id") references "organization" ("id") on update cascade on delete cascade;`);
    this.addSql(`alter table "artifact" add constraint "artifact_organization_id_foreign" foreign key ("organization_id") references "organization" ("id") on update cascade on delete cascade;`);
    this.addSql(`alter table "mitigation_priority" add constraint "mitigation_priority_organization_id_foreign" foreign key ("organization_id") references "organization" ("id") on update cascade on delete cascade;`);
    this.addSql(`alter table "quantitative_risk" add constraint "quantitative_risk_organization_id_foreign" foreign key ("organization_id") references "organization" ("id") on update cascade on delete cascade;`);
    this.addSql(`alter table "risk_matrix_entry" add constraint "risk_matrix_entry_organization_id_foreign" foreign key ("organization_id") references "organization" ("id") on update cascade on delete cascade;`);
    this.addSql(`alter table "risk_profile" add constraint "risk_profile_organization_id_foreign" foreign key ("organization_id") references "organization" ("id") on update cascade on delete cascade;`);
  }

  override async down(): Promise<void> {
    // Remove cascade delete constraints
    this.addSql(`alter table "user_organization" drop constraint if exists "user_organization_organization_id_foreign";`);
    this.addSql(`alter table "service_provider_client" drop constraint if exists "service_provider_client_provider_id_foreign";`);
    this.addSql(`alter table "service_provider_client" drop constraint if exists "service_provider_client_client_id_foreign";`);
    this.addSql(`alter table "system" drop constraint if exists "system_organization_id_foreign";`);
    this.addSql(`alter table "incident" drop constraint if exists "incident_organization_id_foreign";`);
    this.addSql(`alter table "continuity_plan" drop constraint if exists "continuity_plan_organization_id_foreign";`);
    this.addSql(`alter table "poam" drop constraint if exists "poam_organization_id_foreign";`);
    this.addSql(`alter table "audit_log" drop constraint if exists "audit_log_organization_id_foreign";`);
    this.addSql(`alter table "artifact" drop constraint if exists "artifact_organization_id_foreign";`);
    this.addSql(`alter table "mitigation_priority" drop constraint if exists "mitigation_priority_organization_id_foreign";`);
    this.addSql(`alter table "quantitative_risk" drop constraint if exists "quantitative_risk_organization_id_foreign";`);
    this.addSql(`alter table "risk_matrix_entry" drop constraint if exists "risk_matrix_entry_organization_id_foreign";`);
    this.addSql(`alter table "risk_profile" drop constraint if exists "risk_profile_organization_id_foreign";`);

    // Add back constraints without cascade delete
    this.addSql(`alter table "user_organization" add constraint "user_organization_organization_id_foreign" foreign key ("organization_id") references "organization" ("id") on update cascade;`);
    this.addSql(`alter table "service_provider_client" add constraint "service_provider_client_provider_id_foreign" foreign key ("provider_id") references "organization" ("id") on update cascade;`);
    this.addSql(`alter table "service_provider_client" add constraint "service_provider_client_client_id_foreign" foreign key ("client_id") references "organization" ("id") on update cascade;`);
    this.addSql(`alter table "system" add constraint "system_organization_id_foreign" foreign key ("organization_id") references "organization" ("id") on update cascade;`);
    this.addSql(`alter table "incident" add constraint "incident_organization_id_foreign" foreign key ("organization_id") references "organization" ("id") on update cascade;`);
    this.addSql(`alter table "continuity_plan" add constraint "continuity_plan_organization_id_foreign" foreign key ("organization_id") references "organization" ("id") on update cascade;`);
    this.addSql(`alter table "poam" add constraint "poam_organization_id_foreign" foreign key ("organization_id") references "organization" ("id") on update cascade;`);
    this.addSql(`alter table "audit_log" add constraint "audit_log_organization_id_foreign" foreign key ("organization_id") references "organization" ("id") on update cascade;`);
    this.addSql(`alter table "artifact" add constraint "artifact_organization_id_foreign" foreign key ("organization_id") references "organization" ("id") on update cascade;`);
    this.addSql(`alter table "mitigation_priority" add constraint "mitigation_priority_organization_id_foreign" foreign key ("organization_id") references "organization" ("id") on update cascade;`);
    this.addSql(`alter table "quantitative_risk" add constraint "quantitative_risk_organization_id_foreign" foreign key ("organization_id") references "organization" ("id") on update cascade;`);
    this.addSql(`alter table "risk_matrix_entry" add constraint "risk_matrix_entry_organization_id_foreign" foreign key ("organization_id") references "organization" ("id") on update cascade;`);
    this.addSql(`alter table "risk_profile" add constraint "risk_profile_organization_id_foreign" foreign key ("organization_id") references "organization" ("id") on update cascade;`);
  }
}

================
File: Migration20241212175619.ts
================
import { Migration } from '@mikro-orm/migrations';

export class Migration20241212175619 extends Migration {

  override async up(): Promise<void> {
    // Add last_name as nullable first
    this.addSql(`alter table "user" add column "last_name" varchar(255);`);
    
    // Update existing records with a default value
    this.addSql(`update "user" set "last_name" = '' where "last_name" is null;`);
    
    // Make last_name non-nullable
    this.addSql(`alter table "user" alter column "last_name" set not null;`);

    // Rename existing columns
    this.addSql(`alter table "user" rename column "name" to "first_name";`);
    this.addSql(`alter table "user" rename column "system_role" to "role";`);
  }

  override async down(): Promise<void> {
    this.addSql(`alter table "user" drop column "last_name";`);
    this.addSql(`alter table "user" rename column "first_name" to "name";`);
    this.addSql(`alter table "user" rename column "role" to "system_role";`);
  }

}

================
File: Migration20241212180400.ts
================
import { Migration } from '@mikro-orm/migrations';

export class Migration20241212180400 extends Migration {
  async up(): Promise<void> {
    this.addSql('CREATE EXTENSION IF NOT EXISTS "uuid-ossp";');
  }

  async down(): Promise<void> {
    this.addSql('DROP EXTENSION IF EXISTS "uuid-ossp";');
  }
}

================
File: Migration20241212183455.ts
================
import { Migration } from '@mikro-orm/migrations';

export class Migration20241212183455 extends Migration {
  async up(): Promise<void> {
    // Create client_user table
    this.addSql(`create table "client_user" (
      "id" uuid not null default uuid_generate_v4(),
      "created_at" timestamptz(0) not null default now(),
      "updated_at" timestamptz(0) not null default now(),
      "email" varchar(255) not null,
      "password" varchar(255) not null,
      "first_name" varchar(255) not null,
      "last_name" varchar(255) not null,
      "is_active" boolean not null default true,
      "last_login" timestamptz(0) null,
      constraint "client_user_pkey" primary key ("id"),
      constraint "client_user_email_unique" unique ("email")
    );`);

    // Create system_user table
    this.addSql(`create table "system_user" (
      "id" uuid not null default uuid_generate_v4(),
      "created_at" timestamptz(0) not null default now(),
      "updated_at" timestamptz(0) not null default now(),
      "email" varchar(255) not null,
      "password" varchar(255) not null,
      "first_name" varchar(255) not null,
      "last_name" varchar(255) not null,
      "role" text check ("role" in ('GLOBAL_ADMIN', 'ADMIN')) not null default 'ADMIN',
      "is_active" boolean not null default true,
      "last_login" timestamptz(0) null,
      constraint "system_user_pkey" primary key ("id"),
      constraint "system_user_email_unique" unique ("email")
    );`);

    // Create incident table if it doesn't exist
    this.addSql(`create table if not exists "incident" (
      "id" uuid not null default uuid_generate_v4(),
      "created_at" timestamptz(0) not null default now(),
      "updated_at" timestamptz(0) not null default now(),
      "organization_id" uuid not null,
      "title" varchar(255) not null,
      "description" text not null,
      "severity" text check ("severity" in ('LOW', 'MEDIUM', 'HIGH', 'CRITICAL')) not null,
      "status" text check ("status" in ('OPEN', 'IN_PROGRESS', 'RESOLVED', 'CLOSED')) not null default 'OPEN',
      "reporter_id" uuid not null references "client_user" ("id") on update cascade,
      "assignee_id" uuid null references "client_user" ("id") on update cascade on delete set null,
      "resolution" text null,
      "resolved_date" timestamptz(0) null,
      constraint "incident_pkey" primary key ("id")
    );`);

    // Create approval table if it doesn't exist
    this.addSql(`create table if not exists "approval" (
      "id" uuid not null default uuid_generate_v4(),
      "created_at" timestamptz(0) not null default now(),
      "updated_at" timestamptz(0) not null default now(),
      "entity_type" varchar(255) not null,
      "entity_id" varchar(255) not null,
      "approver_id" uuid not null references "client_user" ("id") on update cascade,
      "status" text check ("status" in ('PENDING', 'APPROVED', 'REJECTED')) not null default 'PENDING',
      "comments" text null,
      "approved_at" timestamptz(0) null,
      constraint "approval_pkey" primary key ("id")
    );`);

    // Create asset table if it doesn't exist
    this.addSql(`create table if not exists "asset" (
      "id" uuid not null default uuid_generate_v4(),
      "created_at" timestamptz(0) not null default now(),
      "updated_at" timestamptz(0) not null default now(),
      "system_id" uuid not null,
      "name" varchar(255) not null,
      "type" varchar(255) not null,
      "status" varchar(255) not null,
      "created_by_id" uuid not null references "client_user" ("id") on update cascade,
      "description" text null,
      "version" varchar(255) null,
      "location" varchar(255) null,
      "purchase_date" timestamptz(0) null,
      "end_of_life" timestamptz(0) null,
      constraint "asset_pkey" primary key ("id")
    );`);

    // Update audit_log table
    this.addSql(`alter table if exists "audit_log" 
      add column if not exists "system_user_id" uuid null references "system_user" ("id") on update cascade on delete set null,
      add column if not exists "client_user_id" uuid null references "client_user" ("id") on update cascade on delete set null;`);

    // Update user_organization table
    this.addSql(`alter table if exists "user_organization" 
      add column if not exists "system_user_id" uuid null references "system_user" ("id") on update cascade on delete set null,
      add column if not exists "client_user_id" uuid null references "client_user" ("id") on update cascade on delete set null;`);
  }

  async down(): Promise<void> {
    // Drop foreign key constraints
    this.addSql(`alter table "incident" drop constraint if exists "incident_reporter_id_foreign";`);
    this.addSql(`alter table "incident" drop constraint if exists "incident_assignee_id_foreign";`);
    this.addSql(`alter table "approval" drop constraint if exists "approval_approver_id_foreign";`);
    this.addSql(`alter table "asset" drop constraint if exists "asset_created_by_id_foreign";`);
    this.addSql(`alter table "audit_log" drop constraint if exists "audit_log_system_user_id_foreign";`);
    this.addSql(`alter table "audit_log" drop constraint if exists "audit_log_client_user_id_foreign";`);
    this.addSql(`alter table "user_organization" drop constraint if exists "user_organization_system_user_id_foreign";`);
    this.addSql(`alter table "user_organization" drop constraint if exists "user_organization_client_user_id_foreign";`);

    // Drop columns from audit_log
    this.addSql(`alter table "audit_log" drop column if exists "system_user_id";`);
    this.addSql(`alter table "audit_log" drop column if exists "client_user_id";`);

    // Drop columns from user_organization
    this.addSql(`alter table "user_organization" drop column if exists "system_user_id";`);
    this.addSql(`alter table "user_organization" drop column if exists "client_user_id";`);

    // Drop tables
    this.addSql(`drop table if exists "client_user" cascade;`);
    this.addSql(`drop table if exists "system_user" cascade;`);
  }
}

================
File: Migration20241212183500.ts
================
import { Migration } from '@mikro-orm/migrations';

export class Migration20241212183500 extends Migration {
  async up(): Promise<void> {
    this.addSql('CREATE EXTENSION IF NOT EXISTS "uuid-ossp";');
  }

  async down(): Promise<void> {
    this.addSql('DROP EXTENSION IF EXISTS "uuid-ossp";');
  }
}
